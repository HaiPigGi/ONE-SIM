ActiveRouter 

Kelas ActiveRouter adalah kelas abstrak yang merupakan superclass untuk router aktif dalam simulasi jaringan Delay Tolerant Network (DTN).

1. Constructor:

ActiveRouter(Settings s): Konstruktor kelas ini menerima objek Settings dan menginisialisasi berbagai parameter, seperti kebijakan transfer pesan, opsi penghapusan pesan yang sudah dikirim, dan model energi jika diaktifkan.

2. init(DTNHost host, List<MessageListener> mListeners):

Metode ini digunakan untuk menginisialisasi router aktif dengan host dan mendengarkan (listeners) yang terkait.

3. changedConnection(Connection con):

Dipanggil saat ada perubahan pada koneksi. Jika pemodelan energi diaktifkan dan koneksi baru dibuat ke node ini, energi untuk proses pemindaian (scan response) dikurangi.

4. requestDeliverableMessages(Connection con):

Metode ini memeriksa pesan-pesan yang dapat dikirim melalui suatu koneksi dan memulai transfer jika memungkinkan.

5. createNewMessage(Message m):

Metode ini membuat ruang untuk pesan baru dalam buffer dan menambahkan pesan baru ke dalamnya.

6. receiveMessage(Message m, DTNHost from):

Metode ini menangani penerimaan pesan oleh router aktif.

7. messageTransferred(String id, DTNHost from):

Metode ini dipanggil ketika pesan berhasil ditransfer dari host lain ke host ini. Juga menghasilkan pesan balasan jika diminta oleh pengirim.

8. getNextMessageToRemove(boolean excludeMsgBeingSent):

Mengembalikan pesan tertua dalam buffer yang dapat dihapus (tidak sedang dikirim jika excludeMsgBeingSent=true).

9. startTransfer(Message m, Connection con):

Mencoba memulai transfer pesan melalui suatu koneksi.

10. canStartTransfer():

Memeriksa apakah router dapat memulai transfer atau tidak.

11. checkReceiving(Message m, DTNHost from):
Memeriksa apakah router ingin memulai menerima pesan dan melakukan sejumlah pemeriksaan, termasuk kebijakan penerimaan dan pengecekan TTL.

12. makeRoomForMessage(int size):
Menghapus pesan dari buffer sampai terdapat cukup ruang untuk pesan baru.

13. dropExpiredMessages():
Menghapus pesan-pesan dengan TTL yang telah habis.

14. makeRoomForNewMessage(int size):
Memastikan bahwa ada ruang yang cukup untuk pesan baru.

15. tryAllMessages(Connection con, List<Message> messages):
Mencoba memulai transfer untuk semua pesan dalam daftar melalui suatu koneksi.

16. tryMessagesToConnections(List<Message> messages, List<Connection> connections):
Mencoba memulai transfer untuk semua pesan melalui semua koneksi yang tersedia.

17. exchangeDeliverableMessages():
Menukar pesan-pesan yang dapat dikirim dengan host yang terhubung saat ini.

18. shuffleMessages(List<Message> messages):
Mengacak urutan pesan dalam daftar.

19. addToSendingConnections(Connection con):
Menambahkan koneksi ke daftar koneksi yang sedang mengirim.

20. isTransferring():
Menunjukkan apakah router sedang melakukan transfer atau tidak.

21. isSending(String msgId):
Menunjukkan apakah router sedang mengirim pesan dengan ID tertentu.

22. hasEnergy():
Menunjukkan apakah host memiliki energi yang cukup.

23. update():
Memperbarui status router, termasuk menyelesaikan transfer yang sudah selesai dan menghapus pesan-pesan dengan TTL yang telah habis.

24. transferAborted(Connection con):
Dipanggil ketika transfer pesan terhenti karena koneksi terputus.

25. transferDone(Connection con):
Dipanggil ketika transfer pesan selesai.

26. getRoutingInfo():
Mengembalikan informasi routing, termasuk tingkat energi jika pemodelan energi diaktifkan.